<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC
  "-//Apache Software Foundation//DTD XDOC 1.0//EN"
  "https://maven.apache.org/dtd/xdoc_1_0.dtd">
<!--
    Copyright 2015-2017 Hippo

    Licensed under the Apache License, Version 2.0 (the  "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS"
    BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<document>
  <properties>
    <title>Installing Hippo Channel Manager Page Management Support</title>
  </properties>
  <body>

    <section name="Custom Configuration">

      <p>
        If you would like to change the default behaviors or customize the default implementation components
        for some reasons, then this page might help you.
      </p>

      <subsection name="Custom Configuration for DocumentCopyingPageCopyEventListener component">
        <p>
          <code>org.onehippo.forge.channelmanager.pagesupport.channel.event.DocumentCopyingPageCopyEventListener</code>
          component copies linked documents in a page and its components from the source channel to the target channel
          on the event of page copying in the channel manager.
        </p>
        <p>
          By default, the <code>DocumentCopyingPageCopyEventListener</code> component is provided by
          the built-in <a href="http://www.onehippo.org/library/concepts/hst-spring/hst-addon-module-support.html">HST Addon Module</a>.
        </p>
        <p>
          The original component bean configuration is defined in
          "/src/main/resources/META-INF/hst-assembly/addon/org/onehippo/forge/channel-pagesup/cross-channel-page-copy-support.xml"
          in the source.
        </p>
        <p>
          If you want to extend or customize the bean,
          you can add a classpath resource (classpath:META-INF/hst-assembly/addon/org/onehippo/forge/channel-pagesup/cross-channel-page-copy-support.xml)
          in your SITE application to shadow the file with a custom bean definition.
          e.g, <code>site/src/main/resources/META-INF/hst-assembly/addon/org/onehippo/forge/channel-pagesup/cross-channel-page-copy-support.xml</code>
        </p>
        <h4>Extension Hooks</h4>
        <p>
          <b>Since version 1.2.0</b>, you can override <code>DocumentCopyingPageCopyEventListener.onBeforePageCopyEvent(PageCopyEvent)</code>
          and <code>DocumentCopyingPageCopyEventListener.onAfterPageCopyEvent(PageCopyEvent)</code>
          method to do something more just before and after the basic document content copying process.</p>
        <p>
          For example, find all the document path HST component parameters in the HST page/component configurations and
          resolve the corresponding document path in case the relative document path changes to update the parameter value
          in the target page/component parameter value. See the following example:
        </p>
        <div class="brush: java">
          <source><![CDATA[
package org.example;

public class MyDocumentCopyingPageCopyEventListener extends DocumentCopyingPageCopyEventListener {

    @Override
    protected void onAfterPageCopyEvent(PageCopyEvent pageCopyEvent) {
        final HstRequestContext requestContext = pageCopyContext.getRequestContext();

        final PageCopyContext pageCopyContext = pageCopyEvent.getPageCopyContext();
        final String sourceContentBasePath = pageCopyContext.getEditingMount().getContentPath().intern();
        final String targetContentBasePath = pageCopyContext.getTargetMount().getContentPath().intern();

        final Node newPageNode = pageCopyContext.getNewPageNode();

        // TODO: Maybe you can traverse newPageNode to find child component configuration nodes and investigate component parameter values
        //       to adjust somethings for your needs here...
    }
}
        ]]></source>
        </div>
        <p>
          In case you want to override the default <code>org.onehippo.forge.channelmanager.pagesupport.channel.event.DocumentCopyingPageCopyEventListener</code>
          component, you can add an XML file in <code>site/src/main/resources/META-INF/hst-assembly/addon/overrides/org/onehippo/forge/channel-pagesup/</code> resource path.
          e.g, <code>site/src/main/resources/META-INF/hst-assembly/addon/overrides/org/onehippo/forge/channel-pagesup/custom-page-copy-listener.xml</code>.
          And, override the bean definition like the following example:
        </p>
        <div class="brush: xml">
          <source><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd">

  <bean id="defaultDocumentCopyingPageCopyEventListener"
        class="org.example.MyDocumentCopyingPageCopyEventListener"
        init-method="init" destroy-method="destroy">
    <!-- flag whether or not to copy all the documents linked by the page and its components -->
    <property name="copyDocumentsLinkedBySourcePage" value="true" />
  </bean>
</beans>
        ]]></source>
        </div>
      </subsection>

      <subsection name="Custom Configuration for DocumentManagementService component">
        <p>
          <code>org.onehippo.forge.channelmanager.pagesupport.document.management.DocumentManagementService</code> component is provided to manage document/folder workflows more easily.
        </p>
        <p>
          The default implementation of <code>DocumentManagementService</code> is
          <code>org.onehippo.forge.channelmanager.pagesupport.document.management.impl.DocumentWorkflowDocumentManagementService</code>,
          and the component is registered by the <code>DaemonModule</code> implementation,
          <code>org.onehippo.forge.channelmanager.pagesupport.document.management.impl.DocumentManagementServiceDaemonModule</code>,
          with the following JCR configuration under <code>/hippo:configuration/hippo:modules/</code>:
        </p>
        <div class="brush: xml">
          <source><![CDATA[
<sv:node xmlns:sv="http://www.jcp.org/jcr/sv/1.0" sv:name="channel-pagesup-document-management-service-module">
  <sv:property sv:name="jcr:primaryType" sv:type="Name">
    <sv:value>hipposys:module</sv:value>
  </sv:property>
  <sv:property sv:name="hipposys:className" sv:type="String">
    <sv:value>org.onehippo.forge.channelmanager.pagesupport.document.management.impl.DocumentManagementServiceDaemonModule</sv:value>
  </sv:property>
  <sv:node sv:name="hippo:moduleconfig">
    <sv:property sv:name="jcr:primaryType" sv:type="Name">
      <sv:value>nt:unstructured</sv:value>
    </sv:property>
  </sv:node>
</sv:node>
    ]]></source>
        </div>
        <p>
          If you have to extend or customize the default <code>DocumentManagementService</code> component for some reasons,
          then you may extend or replace the class, <code>org.onehippo.forge.channelmanager.pagesupport.document.management.impl.DocumentWorkflowDocumentManagementService</code>,
          with a custom one (which must implement <code>org.onehippo.forge.channelmanager.pagesupport.document.management.DocumentManagementService</code>)
          and set the FQCN of your custom implementation class to a string property, named "document.management.service",
          in <code>hippo:moduleconfig</code> node.
          For example, if your custom implementation is <code>org.example.MyDocumentManagementService</code>, then
          you can change the configuration like this:
        </p>
        <div class="brush: xml">
          <source><![CDATA[
<sv:node xmlns:sv="http://www.jcp.org/jcr/sv/1.0" sv:name="channel-pagesup-document-management-service-module">
  <sv:property sv:name="jcr:primaryType" sv:type="Name">
    <sv:value>hipposys:module</sv:value>
  </sv:property>
  <sv:property sv:name="hipposys:className" sv:type="String">
    <sv:value>org.onehippo.forge.channelmanager.pagesupport.document.management.impl.DocumentManagementServiceDaemonModule</sv:value>
  </sv:property>
  <sv:node sv:name="hippo:moduleconfig">
    <sv:property sv:name="jcr:primaryType" sv:type="Name">
      <sv:value>nt:unstructured</sv:value>
    </sv:property>
    <sv:property sv:name="document.management.service" sv:type="String" sv:multiple="false">
      <sv:value>org.example.MyDocumentManagementService</sv:value>
    </sv:property>
  </sv:node>
</sv:node>
    ]]></source>
        </div>
      </subsection>

    </section>

  </body>
</document>
